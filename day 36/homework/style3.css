    /* 
      display: flex; 
      ამ პარამეტრის საშუალებით ელემენტი ხდება Flex კონტეინერი. 
      ეს ნიშნავს, რომ მის შიგნით მყოფი შვილობილი ელემენტები (items) მოქნილად განლაგდებიან სივრცეში.
    */
    .container {
      display: flex;
      background-color: #f0f0f0;
      padding: 20px;
      margin-bottom: 30px;
      border: 1px solid #ccc;
    }

    /* 
      justify-content: space-between; 
      შიდა ელემენტებს ანაწილებს ისე, რომ პირველი ელემენტი მარცხნივ წავიდეს, 
      ბოლო — მარჯვნივ, ხოლო მათ შორის მაქსიმალურად დიდი სივრცე დარჩეს.
    */
    .container-between {
      display: flex;
      justify-content: space-between;
      /* გამოსადეგია როცა გინდა ელემენტები განაწილდეს ბოლოში და შუაში სივრცე დარჩეს. */
    }

    /* 
      justify-content: space-around; 
      შიდა ელემენტებს ანაწილებს ისე, რომ თითოეულ ელემენტს ჰქონდეს ერთნაირი სივრცე 
      მის წინ და უკან. მაგრამ პირველი და ბოლო ელემენტს კიდეზე ექნებათ ნახევარი სივრცე.
    */
    .container-around {
      display: flex;
      justify-content: space-around;
      /* გამოსადეგია როცა გინდა ელემენტებს შორის თანაბარი სივრცე იყოს. */
    }

    /* 
      justify-content: space-evenly; 
      შიდა ელემენტებს ანაწილებს ისე, რომ თითო ელემენტს წინ და უკან ჰქონდეს ზუსტად ერთნაირი სივრცე.
      ეს ნიშნავს, რომ კიდეებსაც იგივე სივრცე ექნება, რაც ელემენტებს შორისაა.
    */
    .container-evenly {
      display: flex;
      justify-content: space-evenly;
      /* გამოსადეგია როცა გინდა ყველა სივრცე ზუსტად თანაბარი იყოს, კიდეებიდან დაწყებული. */
    }